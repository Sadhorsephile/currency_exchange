import 'package:currency_exchange/main.dart' as app;
import 'package:currency_exchange/resources/dictionary.dart';
import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:integration_test/integration_test.dart';

void main() async {
  IntegrationTestWidgetsFlutterBinding.ensureInitialized();
  testWidgets(
    '–¢–µ—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∞ –∫–∞–∫ –µ—â—ë —ç—Ç–æ –Ω–∞–∑–≤–∞—Ç—å ü§°)',
    (tester) async {
      await app.main();
      await tester.pumpAndSettle();

      /// –ò—â–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
      final debitTF = find.byWidgetPredicate((w) =>
          w is TextField &&
          w.decoration?.hintText == AppDictionary.mainScreenDebitHint);
      final creditTF = find.byWidgetPredicate((w) =>
          w is TextField &&
          w.decoration?.hintText == AppDictionary.mainScreenCreditHint);

      /// –ò –∫–Ω–æ–ø–∫–∏
      final debitBtn = find.widgetWithText(ClipOval, '‚Ç¨');
      final creditBtn = find.widgetWithText(ClipOval, r'$');

      /// –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –æ–Ω–∏ –µ—Å—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω–µ
      expect(debitTF, findsOneWidget);
      expect(creditTF, findsOneWidget);
      expect(debitBtn, findsOneWidget);
      expect(creditBtn, findsOneWidget);

      /// –í–≤–æ–¥–∏–º —Ü–∏—Ñ—Ä—É –≤ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ
      await tester.enterText(debitTF, '12');

      await tester.pumpAndSettle();

      /// –ò –æ–∂–∏–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ –≤—Ç–æ—Ä–æ–º –ø–æ–ª–µ
      expect(
        find.byWidgetPredicate(
          (w) =>
              w is TextField &&
              w.decoration?.hintText == AppDictionary.mainScreenCreditHint &&
              w.controller?.text == '12.71',
        ),
        findsOneWidget,
      );

      /// –í–≤–æ–¥–∏–º —Ü–∏—Ñ—Ä—É –≤–æ –≤—Ç–æ—Ä–æ–µ –ø–æ–ª–µ
      await tester.enterText(creditTF, '12');

      await tester.pumpAndSettle();

      /// –ò –æ–∂–∏–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ
      expect(
        find.byWidgetPredicate(
          (w) =>
              w is TextField &&
              w.decoration?.hintText == AppDictionary.mainScreenDebitHint &&
              w.controller?.text == '11.33',
        ),
        findsOneWidget,
      );

      /// –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—è
      await tester.tap(debitBtn);
      await tester.pumpAndSettle();
      final debitlist = find.byType(ListView);

      /// –ë—É–¥–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –Ω–∞ —Ä—É–±–ª—å
      final debitItem = find.widgetWithText(InkWell, 'Russia Ruble');

      expect(debitlist, findsOneWidget);

      /// –î—Ä–∞–≥–∞–µ–º, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥—ë–º –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç
      await tester.dragUntilVisible(
        debitItem,
        debitlist,
        const Offset(0, -200),
      );

      await tester.tap(debitItem);

      /// –ñ–¥—ë–º, –ø–æ–∫–∞ –≤—Å–µ —É—Å—Ç–∞–∫–∞–Ω–∏—Ç—Å—è + –ø—Ä–æ–π–¥—ë—Ç –∑–∞–ø—Ä–æ—Å
      await tester.pumpAndSettle(const Duration(milliseconds: 1000));

      /// –ò –æ–∂–∏–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ –≤—Ç–æ—Ä–æ–º –ø–æ–ª–µ
      expect(
        find.byWidgetPredicate(
          (w) =>
              w is TextField &&
              w.decoration?.hintText == AppDictionary.mainScreenCreditHint &&
              w.controller?.text == '0.15',
        ),
        findsOneWidget,
      );

      /// –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—è
      await tester.tap(creditBtn);
      await tester.pumpAndSettle();
      final creditList = find.byType(ListView);

      /// –ë—É–¥–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –Ω–∞ —Ç—É –∂–µ –≤–∞–ª—é—Ç—É, —á—Ç–æ –∏ –≤ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ
      final creditItem = find.widgetWithText(InkWell, 'Russia Ruble');

      expect(creditList, findsOneWidget);

      /// –î—Ä–∞–≥–∞–µ–º, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥—ë–º –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç
      await tester.dragUntilVisible(
        creditItem,
        creditList,
        const Offset(0, -200),
      );

      await tester.tap(creditItem);

      await tester.pumpAndSettle();

      /// –û–∂–∏–¥–∞–µ–º —É–≤–∏–¥–µ—Ç—å —Å–Ω–µ–∫ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
      expect(
        find.widgetWithText(
          SnackBar,
          AppDictionary.mainScreenSameCurrenciesSelectedWarning,
        ),
        findsOneWidget,
      );

      /// –ò —Ç–æ, —á—Ç–æ –≤—Ç–æ—Ä–∞—è –≤–∞–ª—é—Ç–∞ –æ—Å—Ç–∞–ª–∞—Å—å –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π
      expect(find.widgetWithText(ClipOval, r'$'), findsOneWidget);
    },
  );
}
